#!/bin/bash
# note: Configured for bspwm usage

IN="LVDS1"
EXT="VGA1"
EXT2="HDMI1"
BG_PICTURE="$HOME/pictures/sol.jpg"

# bspwm automatically adds a new desktop, Desktop#, each time
# a monitor is recognized by it (that way there's a desktop for
# that monitor no matter what). However, we're re-shuffling
# desktops, and the name Desktop# is ugly
function remove_autogened_desktops {
   for desktop_name in $(bspc query -D | grep Desktop); do
      bspc desktop $desktop_name -r
   done
}

function setup_initial_desktops {
  ## declare an array variable
  output_name=$IN
  declare -a desktop_names=("I" "II" "III" "IV" "V" "VI" "VII" "VIII" "IX")

  ## now loop through the above array
  for name in "${desktop_names[@]}"; do
	bspc desktop $name -m $output_name; \
  done
}

function setup_new_monitor {
   output_name=$1
   # add vga monitor
   xrandr --output $output_name --auto --right-of $IN --primary
   # add background for new monitor
   feh --bg-scale $BG_PICTURE
   # move desktops to new monitor
   bspc desktop V -m $output_name; \
      bspc desktop VI -m $output_name; \
      bspc desktop VII -m $output_name; \
      bspc desktop VIII -m $output_name; \
      bspc desktop IX -m $output_name
}

function add_desktop_to_new_monitor {
   output_name=$1
   bspc monitor $output_name -a DesktopRemoveMe;
}

function setup_wrapper {
	add_desktop_to_new_monitor $1
	setup_initial_desktops 
	#setup_new_monitor $1
	echo "$1 connected"
	# remove default "Desktop#" workspace(s)
	remove_autogened_desktops
	# restart panel
	pkill -USR1 -x sxhkd; pkill -USR1 -x panel; $HOME/.scripts/panel/panel &
}

if [ $(xrandr | grep -c "$EXT connected") -gt 0 ] ; then
  setup_wrapper $EXT
elif [ $(xrandr | grep -c "$ext2 connected") -gt 0 ]; then
  setup_wrapper $EXT2
else
   echo "no external monitor found"
   xrandr --output $ext --off --right-of $in --primary
   xrandr --output $EXT2 --off --right-of $IN --primary
   xrandr --output $IN --primary
   feh --bg-scale $BG_PICTURE
fi


